version: '3.1'
services:
  authenticate-service-api:
    container_name: authenticate-service-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/app
    env_file: .env
    command: bun run dev
    depends_on:
      - auth-redis
      - auth-mongo
    networks:
      - cache-network
      - db-network

  auth-redis:
    container_name: auth-redis
    image: redis:7.2.3-alpine3.18
    volumes:
      - ./data/redis:/data/redis:cached
    ports:
      - "7379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    networks:
      - cache-network
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-mongo:
    container_name: auth-mongo
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}

    volumes:
      - ./data/mongodb:/data/db
      - ./data/db-entrypoint.sh:/docker-entrypoint-initdb.d/db-entrypoint.sh
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - db-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://${DB_USER}:${DB_PASSWORD}@localhost:${DB_PORT}/?authSource=${DB_NAME} --quiet
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  cache-network:
    driver: bridge
  db-network:
    driver: bridge

